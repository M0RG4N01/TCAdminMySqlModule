@using System.Web.Mvc.Ajax
@using System.Web.Mvc.Html
@using Kendo.Mvc.UI
@using TCAdmin.SDK.Web.MVC.Extensions
@model MySqlModule.Models.MySql.MySqlModel

@{
    Page.Title = "MySql Management";
    <script>
        $(document).ready(function () {
            document.title = "@TCAdmin.SDK.Web.MVC.Template.GetSelectedTemplateTitle() " + "MySql Manager";
            $('.header-text').html("MySql Manager")
            @if (TempData.ContainsKey("Error"))
            {
                <text>
                    TCAdmin.Ajax.ShowBasicDialog('Error', 'Uh oh, something went wrong! Please contact an Administrator (see web console for details)!');
                    console.log(`@TempData["Error"]`);
                    $('body').css('cursor', 'default');
                </text>
            }
        });
    </script>
    Layout = this.GetTemplateFile("Shared/Main.cshtml", true);
}

@section sidebar{
    @Html.Partial("_DefaultSidebar")
}

<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css" integrity="sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh" crossorigin="anonymous">
<link rel="stylesheet" href="../Views/@TCAdmin.SDK.Web.MVC.Template.GetSelectedTemplate()/ThemeBuilder.css">
<link rel="stylesheet" href="../Views/@TCAdmin.SDK.Web.MVC.Template.GetSelectedTemplate()/Custom.css">
<style>body { line-height: 1.2 !important; } </style>
<br/><div class="row" style="margin: 5px;">
    <!-- Name Card -->
    <div class="col-auto col-xl-3">
        <div class="k-card shadow mb-4">
            <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between" id="dbAllow">
                <h6 class="m-0 font-weight-bold text-primary" id="dbAllowinner">Databases Allowed</h6>
            </div>
            <div class="k-card-body">
                <div class="k-card-text mb-0 text-center h5" style="padding: 10px;" id="dbAllowSub">@Model.CurrentDatabases/@Model.MaxDatabases</div>
            </div>
        </div>
    </div>
    <!-- Name Card -->
    <div class="col-auto col-xl-3">
        <div class="k-card shadow mb-4">
            <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between" id="dbLocations">
                <h6 class="m-0 font-weight-bold text-primary" id="dbLocationsinner">Eligible Locations</h6>
            </div>
            <div class="k-card-body">
                <div class="k-card-text mb-0 h5" style="padding: 10px;" id="dbLocationsSub">@(string.Join(" | ", Model.EligibleLocations.Datacenters.Select(x => x.Location)))</div>
            </div>
        </div>
    </div>
    @if (Model.MigrationDbCount >= 1)
    {
        <div class="col-auto col-xl-3" style="margin-left: auto;">
            <!-- Migration Card -->
            <div class="k-card shadow mb-4">
                <!-- Card Header - Accordion -->
                <div id="#MigrateSQLCard" class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                    <h6 class="m-0 font-weight-bold text-primary" id="dbMigrate">Migrate Databases - @Model.MigrationDbCount database(s)! :( </h6>
                </div>
                <div class="k-card-body">
                    @using (Ajax.BeginForm("MigrateDatabases", "MySql", null))
                    {
                        <div class="k-card-text mb-0 text-center h5" style="padding: 10px;" id="dbMigrateSub">@Html.Kendo().Button().Name("Migrate").Content("Migrate Databases").HtmlAttributes(new { style="padding: 2px; width: 100%", @class = "k-primary"}) </div>
                    }
                </div>
            </div>
        </div>
    }
</div>
<div class="row" style="margin: 5px;">
    @Html.Action("DatabasesGrid", "MySql")
    <div class="col-auto col-xl-4 col-lg-5">
        <!-- Manage Databases Card -->
        <div class="k-card shadow mb-4">
            <!-- Card Header - Accordion -->
            <div id="#CreateSQLCard" class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                <h6 class="m-0 font-weight-bold text-primary" id="dbManage">Manage Databases</h6>
            </div>
            <div class="k-card-body">
                <div class="row">
                    <div class="col-l-3 col-auto" style="padding: 10px;">
                        @if (Model.CurrentDatabases < Model.MaxDatabases)
                        {
                            using (Ajax.BeginForm("CreateDatabase", "MySql", null))
                            {
                                <h6 id="dbCreate">Create Database</h6>
                                @Html.Kendo().TextBoxFor(model => model.CreationUsername).Name("requestDbUsername").Enable(false).HtmlAttributes(new {disabled = true, style = "width: auto;", @class = "k-primary"})
                                @Html.Kendo().TextBox().Name("requestDbName").HtmlAttributes(new { placeholder="Enter Database Name", @class = "k-input"})<br/><br/>
                                <h6 id="dbService">For Service: </h6>
                                @Html.Kendo().DropDownList().Name("creationServiceId").BindTo(Model.CreationServiceIds).HtmlAttributes(new {style = "margin: 10px", @class = "k-primary"})
                                @Html.Kendo().Button().Name("Create").Content("Create").HtmlAttributes(new  {style = "margin-bottom: 10px; margin-top: 10px;", @class = "k-primary"})
                            }
                        }<br/>
                        @if(Model.CurrentDatabases > 0){
                            
                            <h6 id="dbManage">General Database Management</h6>
                            @Html.Kendo().DropDownList().Name("manageServiceId").BindTo(Model.DbUsernames).HtmlAttributes(new {style = "width: 100%; margin: 10px", @class = "k-primary"})
                            @Html.Kendo().Button().Name("Delete").Content("Delete Database").Events(x => x.Click("onDelete")).HtmlAttributes(new {style = "width: 47%; margin: 5px", @class = "k-primary"})
                            @Html.Kendo().Button().Name("Reset").Content("Reset Password").Events(x => x.Click("onReset")).HtmlAttributes(new {style = "width: 47%; margin: 5px", @class = "k-primary"})<br/><br/>
                            <h6 id="dbBackupManagement">Database Backup Management</h6>
                            @Html.Kendo().DropDownList().Name("backupServiceId").BindTo(Model.DbUsernames).HtmlAttributes(new {style = "margin: 10px", @class = "k-primary"})
                            @Html.Kendo().Button().Name("Download").Content("Download").Events(x => x.Click("onDownload")).HtmlAttributes(new {style = "margin-right: 10px", @class = "k-primary"})
                            @Html.Kendo().Button().Name("Restore").Content("Restore").Events(x => x.Click("onRestore")).HtmlAttributes(new {@class = "k-primary"})
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script>

    $(document).ready(function() {
       $(".k-button.k-upload-button").css("display", "none !important");
    });
                
    function onDelete() {
        var serviceId = $("#manageServiceId").val();
        $.ajax({
            type: "POST",
            url: "/MySql/DeleteDatabase/",
            data: JSON.stringify({manageServiceId: serviceId}),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            
            success: function () {
                 window.location.reload();
            }
        });
    }
                                
    function onReset() {
        var serviceId = $("#manageServiceId").val();
        $.ajax({
            type: "POST",
            url: "/MySql/ResetPassword/",
            data: JSON.stringify({manageServiceId: serviceId}),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            
            success: function () {
                 $('#MySQLGrid').data("kendoGrid").dataSource.read();
            }
        });
    }  
    
    function onDownload() {
        var serviceId = $("#backupServiceId").val();
        var url = '@Url.Action("BackupDatabase", "MySql")';
        window.location.replace(url + "?backupServiceId=" + serviceId);
    }
    
    function onRestore() {
        var serviceId = $("#backupServiceId").val();
        var uploadDialog = $('<div />').kendoDialog({ title: "Upload .SQL File", content: "<input name='files' id='files' type='file'/>", closable: true, actions: [{ text: 'Finish', primary: true }], close: onDialogClose}).data('kendoDialog').open();
        var upload = $("#files").kendoUpload({ async: {saveUrl: '@Url.Action("RestoreDatabase", "MySql")' + "?backupServiceId=" + serviceId, autoUpload: false }, localization: { uploadSelectedFiles: 'Restore .SQL', cancel: 'Remove', uploadSuccess: '.SQL file restored successfully!', uploadFail: '.SQL file restore failed, see web console (F12) for details!' }, multiple: false, upload: onUpload, select: submitUpload });
        
        function onUpload(e) { 
            var files = e.files;
            $.each(files, function () { 
                if(files.length > 1) {
                    alert("Only one .sql file can be uploaded!")
                    upload.data("kendoUpload").disable();
                    e.preventDefault();
                }
            });
        }
        
        function submitUpload(e) {     
            var files = e.files;
            $.each(files, function () { 
                if (this.extension.toLowerCase() != ".sql") {
                    alert("Only .sql files can be uploaded!")
                    e.preventDefault();
                }
            });
        }
        
        function onDialogClose() {
          var elem = document.getElementById('files'); 
          elem.parentNode.removeChild(elem);
        }

    }
</script>
